{"version":3,"file":"block-editor/index.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AAEAA,wEAAkB,CAAC,iBAAD,EAAoB;EACpCK,KAAK,EAAEF,mDAAE,CAAC,MAAD,EAAS,YAAT,CAD2B;EAEpCG,OAAO,EAAE,MAF2B;EAGpCC,SAAS,EAAE,MAHyB;;EAIpCC,IAAI,OAAgC;IAAA,IAA/B;MAAEC,QAAF;MAAYC,QAAZ;MAAsBC;IAAtB,CAA+B;IAClC,MAAMC,aAAa,GAAGR,0DAAS,CAAES,MAAD,IAC9BA,MAAM,CAAC,mBAAD,CAAN,CAA4BC,gBAA5B,EAD6B,CAA/B;IAIA,OACE,kIACGF,aAAa,EAAEG,IAAf,KAAwB,gBAAxB,IACC,kEAAC,0EAAD;MACE,KAAK,EAAEZ,mDAAE,CAAC,MAAD,EAAS,YAAT,CADX;MAEE,IAAI,EAAC,WAFP;MAGE,QAAQ,EAAEM,QAHZ;MAIE,OAAO,EAAE,MAAM;QACbC,QAAQ,CACNT,kEAAY,CAACU,KAAD,EAAQ;UAClBK,IAAI,EAAE;QADY,CAAR,CADN,CAAR;MAKD;IAVH,EAFJ,CADF;EAkBD;;AA3BmC,CAApB,CAAlB;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AAOA;AAEAC,kEAAc,CAAC,YAAD,EAAe;EAC3BU,MAAM,GAAG;IACP,MAAM;MAAEC,QAAF;MAAYC,QAAZ;MAAsBC,cAAtB;MAAsCC;IAAtC,IAA4D3B,0DAAS,CACxES,MAAD,IAAY;MACV,OAAOA,MAAM,CAAC,aAAD,CAAN,CAAsBmB,sBAAtB,CAA6C,MAA7C,CAAP;IACD,CAHwE,CAA3E;IAMA,MAAM;MAAEC;IAAF,IAAed,4DAAW,CAAC,aAAD,CAAhC;IAEA,OACE,kEAAC,+DAAD;MACE,IAAI,EAAC,YADP;MAEE,IAAI,EAAC,OAFP;MAGE,KAAK,EAAEhB,mDAAE,CAAC,oBAAD,EAAuB,YAAvB;IAHX,GAKE,kEAAC,4DAAD;MAAW,KAAK,EAAEA,mDAAE,CAAC,mBAAD,EAAsB,YAAtB;IAApB,GACE,kEAAC,8DAAD;MACE,KAAK,EAAEA,mDAAE,CAAC,OAAD,EAAU,YAAV,CADX;MAEE,KAAK,EAAEyB,QAFT;MAGE,QAAQ,EAAGA,QAAD,IACRK,QAAQ,CAAC;QACPC,IAAI,EAAE;UACJN;QADI;MADC,CAAD;IAJZ,EADF,EAYE,kEAAC,kEAAD;MACE,KAAK,EAAEzB,mDAAE,CAAC,aAAD,EAAgB,YAAhB,CADX;MAEE,KAAK,EAAE2B,cAFT;MAGE,QAAQ,EAAGA,cAAD,IAAoB;QAC5BG,QAAQ,CAAC;UACPC,IAAI,EAAE;YACJJ;UADI;QADC,CAAD,CAAR;MAKD;IATH,EAZF,EAuBE,kEAAC,gEAAD;MACE,KAAK,EAAE3B,mDAAE,CAAC,yBAAD,EAA4B,YAA5B,CADX;MAEE,OAAO,EAAE4B,iBAFX;MAGE,IAAI,EAAE5B,mDAAE,CACN,uGADM,EAEN,YAFM,CAHV;MAOE,QAAQ,EAAG4B,iBAAD,IAAuB;QAC/BE,QAAQ,CAAC;UACPC,IAAI,EAAE;YACJH;UADI;QADC,CAAD,CAAR;MAKD;IAbH,EAvBF,EAsCGA,iBAAiB,IAChB,kIACE;MAAK,GAAG,EAAEF;IAAV,EADF,EAEE,kEAAC,qEAAD,QACE,kEAAC,gEAAD;MACE,MAAM,EAAE,CAAC,OAAD,CADV;MAEE,MAAM,EAAE,QAAc;QAAA,IAAb;UAAEM;QAAF,CAAa;QACpB,OACE,kEAAC,yDAAD;UAAQ,SAAS,MAAjB;UAAkB,OAAO,EAAEA;QAA3B,GACGhC,mDAAE,CAAC,cAAD,EAAiB,YAAjB,CADL,CADF;MAKD,CARH;MASE,QAAQ,EAAGiC,KAAD,IAAW;QACnBH,QAAQ,CAAC;UACPC,IAAI,EAAE;YACJL,QAAQ,EAAEO,KAAK,CAACC,KAAN,CAAYC,SAAZ,CAAsBC;UAD5B;QADC,CAAD,CAAR;MAKD;IAfH,EADF,CAFF,CAvCJ,CALF,CADF;EAuED;;AAjF0B,CAAf,CAAd;;;;;;UCbA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNA","sources":["webpack://udemy-plus/./src/block-editor/neon.css?078d","webpack://udemy-plus/external window [\"wp\",\"blockEditor\"]","webpack://udemy-plus/external window [\"wp\",\"components\"]","webpack://udemy-plus/external window [\"wp\",\"data\"]","webpack://udemy-plus/external window [\"wp\",\"editPost\"]","webpack://udemy-plus/external window [\"wp\",\"element\"]","webpack://udemy-plus/external window [\"wp\",\"i18n\"]","webpack://udemy-plus/external window [\"wp\",\"plugins\"]","webpack://udemy-plus/external window [\"wp\",\"richText\"]","webpack://udemy-plus/./src/block-editor/neon-format.js","webpack://udemy-plus/./src/block-editor/sidebar.js","webpack://udemy-plus/webpack/bootstrap","webpack://udemy-plus/webpack/runtime/make namespace object","webpack://udemy-plus/./src/block-editor/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","module.exports = window[\"wp\"][\"richText\"];","import \"./neon.css\";\nimport { registerFormatType, toggleFormat } from \"@wordpress/rich-text\";\nimport { RichTextToolbarButton } from \"@wordpress/block-editor\";\nimport { __ } from \"@wordpress/i18n\";\nimport { useSelect } from \"@wordpress/data\";\n\nregisterFormatType(\"udemy-plus/neon\", {\n  title: __(\"Neon\", \"udemy-plus\"),\n  tagName: \"span\",\n  className: \"neon\",\n  edit({ isActive, onChange, value }) {\n    const selectedBlock = useSelect((select) =>\n      select(\"core/block-editor\").getSelectedBlock()\n    );\n\n    return (\n      <>\n        {selectedBlock?.name === \"core/paragraph\" && (\n          <RichTextToolbarButton\n            title={__(\"Neon\", \"udemy-plus\")}\n            icon=\"superhero\"\n            isActive={isActive}\n            onClick={() => {\n              onChange(\n                toggleFormat(value, {\n                  type: \"udemy-plus/neon\",\n                })\n              );\n            }}\n          />\n        )}\n      </>\n    );\n  },\n});\n","import { registerPlugin } from \"@wordpress/plugins\";\nimport { PluginSidebar } from \"@wordpress/edit-post\";\nimport { __ } from \"@wordpress/i18n\";\nimport { useSelect, useDispatch } from \"@wordpress/data\";\nimport {\n  PanelBody,\n  TextControl,\n  TextareaControl,\n  ToggleControl,\n  Button,\n} from \"@wordpress/components\";\nimport { MediaUpload, MediaUploadCheck } from \"@wordpress/block-editor\";\n\nregisterPlugin(\"up-sidebar\", {\n  render() {\n    const { og_title, og_image, og_description, og_override_image } = useSelect(\n      (select) => {\n        return select(\"core/editor\").getEditedPostAttribute(\"meta\");\n      }\n    );\n\n    const { editPost } = useDispatch(\"core/editor\");\n\n    return (\n      <PluginSidebar\n        name=\"up_sidebar\"\n        icon=\"share\"\n        title={__(\"Udemy Plus Sidebar\", \"udemy-plus\")}\n      >\n        <PanelBody title={__(\"Opengraph Options\", \"udemy-plus\")}>\n          <TextControl\n            label={__(\"Title\", \"udemy-plus\")}\n            value={og_title}\n            onChange={(og_title) =>\n              editPost({\n                meta: {\n                  og_title,\n                },\n              })\n            }\n          />\n          <TextareaControl\n            label={__(\"Description\", \"udemy-plus\")}\n            value={og_description}\n            onChange={(og_description) => {\n              editPost({\n                meta: {\n                  og_description,\n                },\n              });\n            }}\n          />\n          <ToggleControl\n            label={__(\"Override Featured Image\", \"udemy-plus\")}\n            checked={og_override_image}\n            help={__(\n              \"By default, the featured image will be used as the image. Check this option to use a different image.\",\n              \"udemy-plus\"\n            )}\n            onChange={(og_override_image) => {\n              editPost({\n                meta: {\n                  og_override_image,\n                },\n              });\n            }}\n          />\n          {og_override_image && (\n            <>\n              <img src={og_image} />\n              <MediaUploadCheck>\n                <MediaUpload\n                  accept={[\"image\"]}\n                  render={({ open }) => {\n                    return (\n                      <Button isPrimary onClick={open}>\n                        {__(\"Change Image\", \"udemy-plus\")}\n                      </Button>\n                    );\n                  }}\n                  onSelect={(image) => {\n                    editPost({\n                      meta: {\n                        og_image: image.sizes.opengraph.url,\n                      },\n                    });\n                  }}\n                />\n              </MediaUploadCheck>\n            </>\n          )}\n        </PanelBody>\n      </PluginSidebar>\n    );\n  },\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"./sidebar.js\";\nimport \"./neon-format.js\";\n"],"names":["registerFormatType","toggleFormat","RichTextToolbarButton","__","useSelect","title","tagName","className","edit","isActive","onChange","value","selectedBlock","select","getSelectedBlock","name","type","registerPlugin","PluginSidebar","useDispatch","PanelBody","TextControl","TextareaControl","ToggleControl","Button","MediaUpload","MediaUploadCheck","render","og_title","og_image","og_description","og_override_image","getEditedPostAttribute","editPost","meta","open","image","sizes","opengraph","url"],"sourceRoot":""}